# Generated by Django 5.1.2 on 2024-11-12 10:32

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('facility_id', models.CharField(editable=False, max_length=255, primary_key=True, serialize=False)),
                ('facility_name', models.CharField(max_length=255)),
                ('facility_head', models.CharField(max_length=255)),
                ('facility_location', models.CharField(max_length=255)),
                ('facility_description', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facilities', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Energy',
            fields=[
                ('energy_id', models.CharField(editable=False, max_length=255, primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=255)),
                ('DatePicker', models.DateField(blank=True, null=True)),
                ('hvac', models.FloatField(default=0.0)),
                ('production', models.FloatField(default=0.0)),
                ('stp', models.FloatField(default=0.0)),
                ('admin_block', models.FloatField(default=0.0)),
                ('utilities', models.FloatField(default=0.0)),
                ('others', models.FloatField(default=0.0)),
                ('fuel_types', models.CharField(max_length=255)),
                ('cooking_coal', models.FloatField(default=0.0)),
                ('coke_oven_coal', models.FloatField(default=0.0)),
                ('natural_gas', models.FloatField(default=0.0)),
                ('diesel', models.FloatField(default=0.0)),
                ('biomass_wood', models.FloatField(default=0.0)),
                ('biomass_other_solid', models.FloatField(default=0.0)),
                ('renewable_solar', models.FloatField(default=0.0)),
                ('renewable_other', models.FloatField(default=0.0)),
                ('overall_usage', models.FloatField(default=0.0, editable=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users_pzc.facility')),
            ],
        ),
        migrations.CreateModel(
            name='Biodiversity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=255)),
                ('biodiversity_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('DatePicker', models.DateField(blank=True, null=True)),
                ('no_trees', models.IntegerField(default=0)),
                ('species', models.CharField(max_length=255)),
                ('age', models.IntegerField(default=0)),
                ('height', models.FloatField(default=0.0)),
                ('width', models.FloatField(default=0.0)),
                ('totalArea', models.FloatField(default=0.0)),
                ('new_trees_planted', models.FloatField(default=0.0)),
                ('head_count', models.FloatField(default=0.0)),
                ('overall_Trees', models.FloatField(default=0.0, editable=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users_pzc.facility')),
            ],
        ),
        migrations.CreateModel(
            name='Logistices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=255)),
                ('DatePicker', models.DateField(blank=True, null=True)),
                ('logistices_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('logistices_types', models.CharField(choices=[('staff_logistices', 'Staff_Logistices'), ('cargo', 'Cargo')], default='staff_logistices', max_length=255)),
                ('Typeof_fuel', models.CharField(choices=[('diesel', 'Diesel'), ('petrol', 'Petrol'), ('LPG', 'LPG')], default='diesel', max_length=255)),
                ('km_travelled', models.FloatField(default=0.0)),
                ('No_Trips', models.IntegerField()),
                ('fuel_consumption', models.FloatField(default=0.0)),
                ('No_Vehicles', models.IntegerField()),
                ('Spends_on_fuel', models.FloatField(default=0.0)),
                ('total_fuelconsumption', models.FloatField(default=0.0, editable=False)),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users_pzc.facility')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Org_registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Organization_Name', models.CharField(max_length=255)),
                ('Business_executive_Name', models.CharField(max_length=255)),
                ('Location', models.CharField(blank=True, max_length=255, null=True)),
                ('Branch_ID', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Waste',
            fields=[
                ('waste_id', models.CharField(editable=False, max_length=255, primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=255)),
                ('DatePicker', models.DateField(blank=True, null=True)),
                ('food_waste', models.FloatField(default=0.0)),
                ('solid_Waste', models.FloatField(default=0.0)),
                ('E_Waste', models.FloatField(default=0.0)),
                ('Biomedical_waste', models.FloatField(default=0.0)),
                ('liquid_discharge', models.FloatField(default=0.0)),
                ('other_waste', models.FloatField(default=0.0)),
                ('Recycle_waste', models.FloatField(default=0.0)),
                ('Landfill_waste', models.FloatField(default=0.0)),
                ('overall_usage', models.FloatField(default=0.0, editable=False)),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users_pzc.facility')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Water',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=255)),
                ('water_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('DatePicker', models.DateField(blank=True, null=True)),
                ('Generated_Water', models.FloatField(default=0.0)),
                ('Recycled_Water', models.FloatField(default=0.0)),
                ('Softener_usage', models.FloatField(default=0.0)),
                ('Boiler_usage', models.FloatField(default=0.0)),
                ('otherUsage', models.FloatField(default=0.0)),
                ('overall_usage', models.FloatField(default=0.0, editable=False)),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users_pzc.facility')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
